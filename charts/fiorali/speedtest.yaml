name: speedtest
namespace: speedtest
deployment:
  enabled: true
image:
  repository: openspeedtest/latest
  tag: latest@sha256:1745e913f596fe98882b286a67751efdae74774e9caa742a4934bb056e8748d2
containerPorts:
- containerPort: 3000
  name: speedtest
  protocol: TCP
resources:
  limits:
    cpu: 250m
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 50Mi
probes:
  httpGet:
    path: /
    port: speedtest
service:
  enabled: true
  ports:
  - name: speedtest
    port: 3000
    protocol: TCP
    targetPort: speedtest
networkpolicy:
  ingress:
    internal: true
ingress:
  enabled: true
  name: speedtest
command:
  enabled: true
  exec: ["/bin/sh", "-c", "cp /OpenSpeedTest-Server.conf /etc/nginx/conf.d/ && ./entrypoint.sh"]
volumeMounts:
- name: speedtest-configmap
  mountPath: /OpenSpeedTest-Server.conf
  subPath: OpenSpeedTest-Server.conf
  readOnly: true
- name: nginx-conf
  mountPath: /etc/nginx/conf.d/
- name: client-temp
  mountPath: /var/cache/nginx/client_temp
- name: proxy-temp
  mountPath: /var/cache/nginx/proxy_temp
- name: fastcgi-temp
  mountPath: /var/cache/nginx/fastcgi_temp
- name: uwsgi-temp
  mountPath: /var/cache/nginx/uwsgi_temp
- name: scgi-temp
  mountPath: /var/cache/nginx/scgi_temp
- name: tmp
  mountPath: /tmp
volumes:
- name: nginx-conf
  emptyDir: {}
- name: speedtest-configmap
  configMap:
    name: speedtest-configmap
    defaultMode: 511
- name: client-temp
  emptyDir: {}
- name: proxy-temp
  emptyDir: {}
- name: fastcgi-temp
  emptyDir: {}
- name: uwsgi-temp
  emptyDir: {}
- name: scgi-temp
  emptyDir: {}
- name: tmp
  emptyDir: {}
podSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  privileged: false
securityContext:
  runAsNonRoot: true
configMap:
  enabled: true
  name: OpenSpeedTest-Server.conf
  value: |-
    # SpeedTest by OpenSpeedTestâ„¢ is a Free and Open-Source Network Speed Test Software.
    # Like this Project? Please Donate NOW & Keep us Alive -> https://go.openspeedtest.com/Donate
    # Thank you for your support! we greatly appreciate your donation.
    # Your contribution helps us continue to improve and maintain the tool for everyone to use.
    # Official Website : https://OpenSpeedTest.com | Email: support@openspeedtest.com
    # Developed by : Vishnu | https://Vishnu.Pro | Email : me@vishnu.pro

    server {
      server_name _ localhost YOURDOMAIN;
      listen 3000 reuseport;
      listen 3001 ssl reuseport;
      listen [::]:3000 reuseport;
      listen [::]:3001 ssl reuseport;
      # If you like to Enable HTTP2 add "http2" to the above line.
      # If HTTP2 Enabled. Upload location should Proxy_Pass to http 1.1 port.
      # Otherwise you will see abnormal Upload Speeds.
      # Nginx Server Windows SSL Performance was very poor! Better use Linux if you need SSL support.
      ssl_certificate /etc/ssl/nginx.crt; # Use your own certificate & key
      ssl_certificate_key /etc/ssl/nginx.key; # <-- key
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      ssl_ciphers "ALL";
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:100m;
      ssl_session_timeout 1d;
      ssl_session_tickets on;
      root /usr/share/nginx/html/;
      index index.html;
      client_max_body_size 35m;
      error_page 405 =200 $uri;
      access_log off;
      gzip off;
      fastcgi_read_timeout 999;
      log_not_found off;
      server_tokens off;
      error_log /dev/null; #Disable this for Windows Nginx.
      tcp_nodelay on;
      tcp_nopush on;
      sendfile on;
      open_file_cache max=200000 inactive=20s;
      open_file_cache_valid 30s;
      open_file_cache_min_uses 2;
      open_file_cache_errors off;

      location ~ /\.well-known/acme-challenge/ {
        allow all;
        default_type "text/plain";
        root /usr/share/nginx/html/;
        try_files $uri =404;
        break;
      }

      location / {
        add_header 'Access-Control-Allow-Origin' "*" always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        #Very Very Important! You SHOULD send no-store from server for Google Chrome.
        add_header Cache-Control 'no-store, no-cache, max-age=0, no-transform';
        add_header Last-Modified $date_gmt;
        if_modified_since off;
        expires off;
        etag off;

        if ($request_method = OPTIONS ) {
          add_header 'Access-Control-Allow-Credentials' "true";
          add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With' always;
          add_header 'Access-Control-Allow-Origin' "$http_origin" always;
          add_header 'Access-Control-Allow-Methods' "GET, POST, OPTIONS" always;
          return 200;
        }
      }

      #HTTP2 & HTTP3 will not wait for the post body and return 200. We need to stop that behaviour.
      #Otherwise, you will see abnormal upload speed. To fix this issue, Enable the following lines. (Only Applicable If you Enabled HTTP2 or HTTP3 in This Server.)

      #HTTP2 & HTTP3 -> UPLOAD FIX -- START

      #location = /upload {
      #    proxy_pass http://127.0.0.1:3000/dev-null;
      #}
      #location = /dev-null {
      #    return 200;
      #}

      #HTTP2 & HTTP3 -> UPLOAD FIX -- END

      # Caching for Static Files,
      location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)$ {
          access_log off;
          expires 365d;
          add_header Cache-Control public;
          add_header Vary Accept-Encoding;
          tcp_nodelay off;
          open_file_cache max=3000 inactive=120s;
          open_file_cache_valid 45s;
          open_file_cache_min_uses 2;
          open_file_cache_errors off;
          gzip on;
          gzip_disable "msie6";
          gzip_vary on;
          gzip_proxied any;
          gzip_comp_level 6;
          gzip_buffers 16 8k;
          gzip_http_version 1.1;
          gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;
      }
    }