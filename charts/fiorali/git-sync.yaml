name: git-sync
namespace: monitoring
image:
  repository: docker.io/alpine/git
  tag: latest@sha256:32a9e8e75ce2f244085b808c932d8287bd1300e4bfecae41a40847f7b64a1a45
deployment:
  enabled: false
resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 250m
    memory: 250Mi
service:
  enabled: false
podDisruptionBudget:
  enabled: false
command:
  exec: ["/bin/sh", "-c", "/git-sync.sh"]
  # exec: ["/bin/sh", "-c", "sleep 1000000"]
cronjob:
  enabled: true
  schedule: "5 23 * * *"
env:
- name: QUERIES
  value: "kubernetes_version,argocd_version,cluster_uptime_days,cluster_node_count,cluster_pod_count,cluster_cpu_usage,cluster_memory_usage,cluster_power_usage,cluster_popeye_score"
- name: GITHUB_PAT
  valueFrom:
    secretKeyRef:
      name: github-pat
      key: github-pat
volumeMounts:
- name: git
  mountPath: /git
- name: git-sync-configmap
  mountPath: /git-sync.sh
  subPath: git-sync.sh
  readOnly: true
volumes:
- name: git-sync-configmap
  configMap:
    name: git-sync-configmap
    defaultMode: 511
- name: git
  emptyDir: {}
networkpolicy:
  ingress:
    internet: true
  egress:
    internet: true
    internal: true
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  privileged: false
podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000
configMap:
  enabled: true
  value: |-
    git-sync.sh: |
      #!/bin/sh
      set -x

      echo "Cloning git repository"
      git clone --depth 5 "https://jaredfiorali:$GITHUB_PAT@github.com/jaredfiorali/infrastructure.git" --single-branch --branch=gh-pages

      # Move into the new directory
      cd /git/infrastructure

      # Set the IFS to comma
      IFS=','

      # TODO: jfiorali - This needs to exit 1 if there are any issues pulling the metrics
      echo "Downloading metrics"
      for query in $QUERIES; do
          wget -O "$query.json" "http://kromgo.monitoring:8080/$query"
      done

      # echo "Set email and username for git push"
      git config user.email "jaredfiorali@gmail.com"
      git config user.name "Jared Fiorali"

      echo "Commit metrics to git"
      git add . && git commit -m "Metrics update"

      echo "Push new metrics"
      git push
