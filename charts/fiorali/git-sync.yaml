name: git-sync
namespace: monitoring
image:
  repository: docker.io/alpine/git
  tag: latest@sha256:97d9cf9f903c2a636cd7e984550eef6d894776fdae26a9456cdd368c0151d1db
deployment:
  enabled: false
resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 250m
    memory: 250Mi
service:
  enabled: false
podDisruptionBudget:
  enabled: false
command:
  exec: ["/bin/sh", "-c", "/tmp/git-sync.sh"]
  # exec: ["/bin/sh", "-c", "sleep 1000000"]
cronjob:
  enabled: true
  schedule: "5 23 * * 0"
env:
- name: GITHUB_PAT
  valueFrom:
    secretKeyRef:
      name: github-pat
      key: github-pat
volumeMounts:
- name: git
  mountPath: /git
- name: git-sync-configmap
  mountPath: /tmp/git-sync.sh
  subPath: git-sync.sh
  readOnly: true
volumes:
- name: git-sync-configmap
  configMap:
    name: git-sync-configmap
    defaultMode: 511
- name: git
  emptyDir: {}
networkpolicy:
  ingress:
    internet: true
  egress:
    internet: true
    internal: true
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  privileged: false
podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000
configMap:
  enabled: true
  name: git-sync.sh
  value: |-
    #!/bin/sh
    set -x

    # echo "Copying SSH key to /root/.ssh/id_rsa"
    # cp /tmp/id_rsa /root/.ssh/id_rsa

    # echo "Downloading SSH key scan for github.com"
    # ssh-keyscan github.com > ~/.ssh/known_hosts

    # echo "Updating permissions for SSH key"
    # chmod 0600 /root/.ssh/id_rsa

    echo "Cloning git repository"
    git clone --depth 5 "https://jaredfiorali:$GITHUB_PAT@github.com/jaredfiorali/infrastructure.git" --single-branch --branch=gh-pages

    # Move into the new directory
    cd /git/infrastructure

    echo "Downloading metrics"
    wget -O node_cpu_usage.json http://kromgo.monitoring:8080/node_cpu_usage

    # echo "Set email and username for git push"
    git config user.email "jaredfiorali@gmail.com"
    git config user.name "Jared Fiorali"

    echo "Commit metrics to git"
    git add . && git commit -m "Metrics update"

    echo "Push new metrics"
    git push
